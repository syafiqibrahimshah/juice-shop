name: "DevSecOps Pipeline"
on: [push, pull_request]

env:
  NODE_VERSION: 20
  TRUFFLEHOG_VERSION: v3.64.0  # Pin version untuk security

jobs:
  build:
    name: "üèóÔ∏è Build & Install"
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build.outputs.status }}
    steps:
      - name: "üîÅ Checkout Code"
        uses: actions/checkout@v4
        
      - name: "‚éî Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: "üì¶ Install Dependencies"
        run : npm install --ignore-scripts

  sast:
    name: "üîç SAST Analysis"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript  # Specify the languages you want to analyze

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: codeql-results.sarif  # Example output file name

  secret_scanning:
    name: "üîë Secret Scanning"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run TruffleHog
        run: |
          docker run --rm -v $(pwd):/repo trufflesecurity/trufflehog filesystem /repo --json --github-actions > trufflehog-results.json

      - name: Upload TruffleHog Results
        uses: actions/upload-artifact@v3
        with:
          name: trufflehog-results
          path: trufflehog-results.json

  build_and_push:
    name: "üê≥ Build and Push Docker Image"
    runs-on: ubuntu-latest
    needs: [sast, container_scanning, secret_scanning]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: syafiq-devsecops-playground
          service_account_key: ${{ secrets.GCP_SA_KEY }}  # Store your service account key in GitHub secrets
          export_default_credentials: true

      - name: Build Docker Image
        run: |
          docker build -t "asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:${{ github.run_id }}" .

      - name: Push Docker Image
        run: |
          docker push "asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:${{ github.run_id }}"
          docker tag "asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:${{ github.run_id }}" asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:latest
          docker push asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:latest

  container_scanning:
    name: "üîç Container Scanning"
    runs-on: ubuntu-latest
    needs: build_and_push  # Ensure this runs after the build_and_push job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.39.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.39.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Scan Docker Image
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops-repo/juice-shop:latest

  notify:
    name: "üì¢ Notification"
    needs: [build, sast, secret_scanning]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: "üì§ Send Results to Defect Dojo"