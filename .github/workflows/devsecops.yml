name: "DevSecOps Pipeline"
on: [push, pull_request]

env:
  NODE_VERSION: 20
  TRUFFLEHOG_VERSION: v3.64.0  # Pin version untuk security

jobs:
  build:
    name: "🏗️ Build & Install"
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build.outputs.status }}
    steps:
      - name: "🔁 Checkout Code"
        uses: actions/checkout@v4
        
      - name: "⎔ Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: "📦 Install Dependencies"
        run : npm install --ignore-scripts

  sast:
    name: "🔍 SAST Analysis"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript  # Specify the languages you want to analyze

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: codeql-results.sarif  # Example output file name

  secret_scanning:
    name: "🔑 Secret Scanning"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run TruffleHog
        run: |
          docker run --rm -v ${{ github.workspace }}:/repo trufflesecurity/trufflehog --path=/repo


  notify:
    name: "📢 Notification"
    needs: [build, sast, sca, secret_scanning]
    runs-on: ubuntu-latest
    if: always()  # Sentiasa run walaupun job lain fail
    steps:
      - name: "📤 Send Slack Notification"
        if: failure()
        uses: archive/github-actions-slack@v2.1.3
        with:
          slack-message: "🚨 ${{ github.workflow }} failed! (${{ github.event_name }})"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          
      - name: "📝 Create Job Summary"
        run: |
          echo "### Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "- SAST: ${{ needs.sast.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- SCA: ${{ needs.sca.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Secrets: ${{ needs.secret_scanning.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY    