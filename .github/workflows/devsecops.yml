name: "🛡️ DevSecOps Pipeline"
on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 20
  TRUFFLEHOG_VERSION: v3.64.0  # Pin version untuk security

jobs:
  build:
    name: "🏗️ Build & Install"
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build.outputs.status }}
    steps:
      - name: "🔁 Checkout Code"
        uses: actions/checkout@v4
        
      - name: "⎔ Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'  # Auto cache node_modules
          
      - name: "📦 Install Dependencies"
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit  # Skip audit sini untuk jimat masa
          else
            npm install --no-package-lock
            echo "::warning::Missing package-lock.json"
          fi
          
      - name: "🔨 Build Project"
        if: contains(npm run, 'build')  # Auto detect build script
        run: npm run build --if-present

  security:
    name: "🔒 Security Scans"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: "🛡️ Run SAST scan"
        uses: "github/codeql-action/analyze@v3"
        with: 
          languages: "javascript"
          ram: 4096
          
      - name: "🛡️ Run SCA (npm audit)"
        run: npm audit --audit-level=moderate --production
          
      - name: "🛡️ Run Secrets scan"
        uses: "trufflesecurity/trufflehog-action@main"
        with:
          paths: "./"
          exclude-paths: "node_modules,dist,test"
          version: "${{ env.TRUFFLEHOG_VERSION }}"

  notify:
    name: "📢 Notification"
    needs: [build, security]
    runs-on: ubuntu-latest
    if: always()  # Sentiasa run walaupun job lain fail
    steps:
      - name: "📤 Send Slack Notification"
        if: failure()
        uses: archive/github-actions-slack@v2.1.3
        with:
          slack-message: "🚨 ${{ github.workflow }} failed! (${{ github.event_name }})"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          
      - name: "📝 Create Job Summary"
        run: |
          echo "### Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "- SAST: ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- SCA: ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Secrets: ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }}" >> $GITHUB_STEP_SUMMARY
      